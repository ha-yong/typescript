import commandLineUsage from "command-line-usage";
import pc from "picocolors";
import { compareStrings, compareTaskNames } from "./utils.js";
export function formatTasks(format, tasks, defaultTask) {
    tasks = tasks.filter(isTaskVisible).sort(compareTaskNames);
    if (format === "simple") {
        return tasks.map((task) => task.options.name).join("\n");
    }
    return commandLineUsage({
        header: "Available tasks",
        content: tasks.map((task) => {
            var _a;
            const name = task === defaultTask
                ? `${pc.green(task.options.name)} (default)`
                : pc.blue(task.options.name);
            let descriptionParts;
            if (task.options.description) {
                descriptionParts = [task.options.description];
            }
            const deps = (_a = task.options.dependencies) === null || _a === void 0 ? void 0 : _a.filter(isTaskVisible);
            if (deps && deps.length > 0) {
                const depNames = deps
                    .map((task) => task.options.name)
                    .sort(compareStrings)
                    .map((v) => pc.blue(v));
                (descriptionParts !== null && descriptionParts !== void 0 ? descriptionParts : (descriptionParts = [])).push(`Depends on: ${depNames.join(", ")}`);
            }
            return { name, description: descriptionParts === null || descriptionParts === void 0 ? void 0 : descriptionParts.join("\n") };
        }),
    });
}
function isTaskVisible(task) {
    return !task.options.hiddenFromTaskList;
}
//# sourceMappingURL=formatTasks.js.map